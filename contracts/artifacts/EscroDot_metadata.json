{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "ECDSAInvalidSignature",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "length",
						"type": "uint256"
					}
				],
				"name": "ECDSAInvalidSignatureLength",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "ECDSAInvalidSignatureS",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "purchaseId",
						"type": "uint256"
					}
				],
				"name": "DisputeRaised",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "purchaseId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "refunded",
						"type": "bool"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "arbiter",
						"type": "address"
					}
				],
				"name": "DisputeResolved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "purchaseId",
						"type": "uint256"
					}
				],
				"name": "PaymentClaimed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stake",
						"type": "uint256"
					}
				],
				"name": "ServiceDeployed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "purchaseId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ServicePurchased",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "gateway",
						"type": "string"
					}
				],
				"name": "ServiceUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newTotal",
						"type": "uint256"
					}
				],
				"name": "StakeToppedUp",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newTotal",
						"type": "uint256"
					}
				],
				"name": "StakeWithdrawn",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					}
				],
				"name": "buyService",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "purchaseId",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "purchaseId",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "deliverableHash",
						"type": "bytes32"
					}
				],
				"name": "claimDigest",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "purchaseId",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "deliverableHash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "buyerSignature",
						"type": "bytes"
					}
				],
				"name": "claimPayment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "gateway",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					}
				],
				"name": "createService",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "listServices",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "ids",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "nextPurchaseIds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "purchases",
				"outputs": [
					{
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "claimed",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "disputed",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "resolved",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "purchaseId",
						"type": "uint256"
					}
				],
				"name": "raiseDispute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "purchaseId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "refundBuyer",
						"type": "bool"
					}
				],
				"name": "resolveDispute",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "serviceIds",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "services",
				"outputs": [
					{
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "gateway",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "stakes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					}
				],
				"name": "topUpStake",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "gateway",
						"type": "string"
					}
				],
				"name": "updateService",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "serviceId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawStake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"errors": {
				"ECDSAInvalidSignature()": [
					{
						"details": "The signature derives the `address(0)`."
					}
				],
				"ECDSAInvalidSignatureLength(uint256)": [
					{
						"details": "The signature has an invalid length."
					}
				],
				"ECDSAInvalidSignatureS(bytes32)": [
					{
						"details": "The signature has an S value that is in the upper half order."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"claimDigest(bytes32,uint256,bytes32)": {
					"details": "Compute the digest that a buyer must sign to authorise payment"
				},
				"createService(string,uint256,string,string)": {
					"params": {
						"description": "IPFS CID or text description `msg.value` – initial stake (must be ≥ `price`)",
						"gateway": "Service endpoint URL",
						"name": "Human‑readable service name (unique)",
						"price": "Fixed price in wei"
					}
				},
				"listServices()": {
					"returns": {
						"ids": "Array of all service IDs"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"DisputeRaised(bytes32,uint256)": {
					"notice": "Buyer flagged the purchase for dispute"
				},
				"DisputeResolved(bytes32,uint256,bool,address)": {
					"notice": "Dispute resolved by an arbiter"
				},
				"PaymentClaimed(bytes32,uint256)": {
					"notice": "Provider claimed the locked payment (buyer signature verified)"
				},
				"ServiceDeployed(bytes32,string,address,uint256)": {
					"notice": "New service deployed"
				},
				"ServicePurchased(bytes32,uint256,address,uint256)": {
					"notice": "Buyer successfully paid for the service"
				},
				"ServiceUpdated(bytes32,string,string)": {
					"notice": "Service updated"
				},
				"StakeToppedUp(bytes32,uint256,uint256)": {
					"notice": "Provider topped up their stake"
				},
				"StakeWithdrawn(bytes32,uint256,uint256)": {
					"notice": "Provider withdrew part of their stake"
				}
			},
			"kind": "user",
			"methods": {
				"buyService(bytes32)": {
					"notice": "Purchase the service by locking `price` ETH in this contract"
				},
				"claimPayment(bytes32,uint256,bytes32,bytes)": {
					"notice": "Provider claims funds by presenting a buyer‑signed message"
				},
				"createService(string,uint256,string,string)": {
					"notice": "Create a new service"
				},
				"nextPurchaseIds(bytes32)": {
					"notice": "Map: serviceId ⇒ next purchase ID"
				},
				"purchases(bytes32,uint256)": {
					"notice": "Map: serviceId ⇒ purchaseId ⇒ Purchase"
				},
				"resolveDispute(bytes32,uint256,bool)": {
					"notice": "Resolve a dispute. Anyone can act as arbiter by bonding ≥ price"
				},
				"serviceIds(uint256)": {
					"notice": "List of all serviceIds (for off‑chain pagination)"
				},
				"services(bytes32)": {
					"notice": "Map: serviceId ⇒ Service data"
				},
				"stakes(bytes32)": {
					"notice": "Map: serviceId ⇒ provider's collateral"
				},
				"topUpStake(bytes32)": {
					"notice": "Increase stake for a service "
				},
				"updateService(bytes32,string,string)": {
					"notice": "Update service details"
				},
				"withdrawStake(bytes32,uint256)": {
					"notice": "Withdraw unused stake (cannot exceed balance held by contract)"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"EscroDotLite.sol": "EscroDot"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"details": {
				"constantOptimizer": false,
				"cse": false,
				"deduplicate": false,
				"inliner": false,
				"jumpdestRemover": false,
				"orderLiterals": false,
				"peephole": false,
				"simpleCounterForLoopUncheckedIncrement": true,
				"yul": false
			},
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"EscroDotLite.sol": {
			"keccak256": "0x034012af9c62c5484751cb61a6567c259e44328cd0983313a197e3744586e5e6",
			"license": "MIT",
			"urls": [
				"bzz-raw://79e37de199140b9ccebfac51bb5618d455fdabbac20cafaaa12ec04a7c43435c",
				"dweb:/ipfs/QmT3tU2HznwXSH5PhdoEEWvfj1JFonYZUDF65vCTC6vgi9"
			]
		}
	},
	"version": 1
}