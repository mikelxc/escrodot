{
	"id": "f43ddb413678b09a3506578f45f13a58",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"SignatureVerifier.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\nimport \"./ECDSA.sol\";\n\nlibrary SignatureVerifier {\n    /**\n     * @dev Generates a hash for signing/verifying.\n     * @param target: The address the signature is for.\n     * @param request: The original request that was sent.\n     * @param result: The `result` field of the response (not including the signature part).\n     */\n    function makeSignatureHash(\n        address target,\n        uint64 expires,\n        bytes memory request,\n        bytes memory result\n    ) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encodePacked(\n                    hex\"1900\",\n                    target,\n                    expires,\n                    keccak256(request),\n                    keccak256(result)\n                )\n            );\n    }\n\n    /**\n     * @dev Verifies a signed message returned from a callback.\n     * @param request: The original request that was sent.\n     * @param response: An ABI encoded tuple of `(bytes result, uint64 expires, bytes sig)`, where `result` is the data to return\n     *        to the caller, and `sig` is the (r,s,v) encoded message signature.\n     * @return signer: The address that signed this message.\n     * @return result: The `result` decoded from `response`.\n     */\n    function verify(\n        bytes calldata request,\n        bytes calldata response\n    ) internal view returns (address, bytes memory) {\n        (bytes memory result, uint64 expires, bytes memory sig) = abi.decode(\n            response,\n            (bytes, uint64, bytes)\n        );\n        address signer = ECDSA.recover(\n            makeSignatureHash(address(this), expires, request, result),\n            sig\n        );\n        require(\n            expires >= block.timestamp,\n            \"SignatureVerifier: Signature expired\"\n        );\n        return (signer, result);\n    }\n}"
			},
			"ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 4/65584 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 462\n// Code size = 1356 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20004]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20004] = a1\n    42: a1 = 0x20010\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20010\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 [@dyn 1] (gas: 71)\n    64: a1 = reverse s1\n    66: a2 = reverse s0\n    68: a3 = u64 [sp]\n    70: a3 = reverse a3\n    72: a4 = u64 [sp + 0x8]\n    75: a4 = reverse a4\n    77: u8 [a0 + 0x18] = a4\n    80: u8 [a0 + 0x10] = a3\n    83: u8 [a0 + 0x8] = a2\n    86: u8 [a0] = a1\n    88: a5 = a4 >> 0x38\n    91: u8 [a0 + 0x1f] = a5\n    94: a5 = a4 >> 0x30\n    97: u8 [a0 + 0x1e] = a5\n   100: a5 = a4 >> 0x28\n   103: u8 [a0 + 0x1d] = a5\n   106: a5 = a4 >> 0x20\n   109: u8 [a0 + 0x1c] = a5\n   112: a5 = a4 >> 0x18\n   115: u8 [a0 + 0x1b] = a5\n   118: a5 = a4 >> 0x10\n   121: u8 [a0 + 0x1a] = a5\n   124: a4 = a4 >> 0x8\n   127: u8 [a0 + 0x19] = a4\n   130: a4 = a3 >> 0x38\n   133: u8 [a0 + 0x17] = a4\n   136: a4 = a3 >> 0x30\n   139: u8 [a0 + 0x16] = a4\n   142: a4 = a3 >> 0x28\n   145: u8 [a0 + 0x15] = a4\n   148: a4 = a3 >> 0x20\n   151: u8 [a0 + 0x14] = a4\n   154: a4 = a3 >> 0x18\n   157: u8 [a0 + 0x13] = a4\n   160: a4 = a3 >> 0x10\n   163: u8 [a0 + 0x12] = a4\n   166: a3 = a3 >> 0x8\n   169: u8 [a0 + 0x11] = a3\n   172: a3 = a2 >> 0x38\n   175: u8 [a0 + 0xf] = a3\n   178: a3 = a2 >> 0x30\n   181: u8 [a0 + 0xe] = a3\n   184: a3 = a2 >> 0x28\n   187: u8 [a0 + 0xd] = a3\n   190: a3 = a2 >> 0x20\n   193: u8 [a0 + 0xc] = a3\n   196: a3 = a2 >> 0x18\n   199: u8 [a0 + 0xb] = a3\n   202: a3 = a2 >> 0x10\n   205: u8 [a0 + 0xa] = a3\n   208: a2 = a2 >> 0x8\n   211: u8 [a0 + 0x9] = a2\n   214: a2 = a1 >> 0x38\n   217: u8 [a0 + 0x7] = a2\n   220: a2 = a1 >> 0x30\n   223: u8 [a0 + 0x6] = a2\n   226: a2 = a1 >> 0x28\n   229: u8 [a0 + 0x5] = a2\n   232: a2 = a1 >> 0x20\n   235: u8 [a0 + 0x4] = a2\n   238: a2 = a1 >> 0x18\n   241: u8 [a0 + 0x3] = a2\n   244: a2 = a1 >> 0x10\n   247: u8 [a0 + 0x2] = a2\n   250: a1 = a1 >> 0x8\n   253: u8 [a0 + 0x1] = a1\n   256: ra = u64 [sp + 0x20]\n   259: s0 = u64 [sp + 0x18]\n   262: s1 = u64 [sp + 0x10]\n   265: sp = sp + 0x28\n   268: ret\n      : @9 (gas: 6)\n   270: sp = sp + 0xfffffffffffffff0\n   273: u64 [sp + 0x8] = ra\n   276: u64 [sp] = s0\n   278: s0 = a0 & 0x1\n   281: ecalli 2 // 'call_data_size'\n   283: fallthrough\n      : @10 (gas: 2)\n   284: u32 [0x20008] = a0\n   289: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   292: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   296: ra = 6, jump @27\n      : @13 [@dyn 3] (gas: 9)\n   301: sp = sp + 0xffffffffffffffa0\n   304: u64 [sp + 0x58] = ra\n   307: u64 [sp + 0x50] = s0\n   310: u64 [sp + 0x48] = s1\n   313: s0 = sp + 0x60\n   316: sp = sp & 0xffffffffffffffe0\n   319: a0 = 0x40\n   322: a1 = 0x20\n   325: ra = 8, jump @0\n      : @14 [@dyn 4] (gas: 39)\n   330: u8 [a0 + 31] = 0x80\n   335: u8 [a0 + 30] = 0\n   338: u8 [a0 + 29] = 0\n   341: u8 [a0 + 28] = 0\n   344: u8 [a0 + 27] = 0\n   347: u8 [a0 + 26] = 0\n   350: u8 [a0 + 25] = 0\n   353: u8 [a0 + 24] = 0\n   356: u8 [a0 + 23] = 0\n   359: u8 [a0 + 22] = 0\n   362: u8 [a0 + 21] = 0\n   365: u8 [a0 + 20] = 0\n   368: u8 [a0 + 19] = 0\n   371: u8 [a0 + 18] = 0\n   374: u8 [a0 + 17] = 0\n   377: u8 [a0 + 16] = 0\n   380: u8 [a0 + 15] = 0\n   383: u8 [a0 + 14] = 0\n   386: u8 [a0 + 13] = 0\n   389: u8 [a0 + 12] = 0\n   392: u8 [a0 + 11] = 0\n   395: u8 [a0 + 10] = 0\n   398: u8 [a0 + 9] = 0\n   401: u8 [a0 + 8] = 0\n   404: u8 [a0 + 7] = 0\n   407: u8 [a0 + 6] = 0\n   410: u8 [a0 + 5] = 0\n   413: u8 [a0 + 4] = 0\n   416: u8 [a0 + 3] = 0\n   419: u8 [a0 + 2] = 0\n   422: u8 [a0 + 1] = 0\n   425: u8 [a0 + 0] = 0\n   427: u64 [sp + 24] = 0\n   430: u64 [sp + 0] = 0\n   432: u64 [sp + 8] = 0\n   435: u64 [sp + 16] = 0\n   438: i32 a0 = sp + 0\n   440: ecalli 5 // 'value_transferred'\n   442: fallthrough\n      : @15 (gas: 8)\n   443: a0 = u64 [sp + 0x10]\n   446: a1 = u64 [sp + 0x18]\n   449: a2 = u64 [sp + 0x8]\n   452: a3 = u64 [sp]\n   454: a1 = a1 | a2\n   457: a0 = a0 | a3\n   460: a0 = a0 | a1\n   463: jump @19 if a0 != 0\n      : @16 (gas: 3)\n   467: a0 = 0x40\n   470: a1 = 0x20\n   473: ra = 10, jump @0\n      : @17 [@dyn 5] (gas: 100)\n   478: a1 = u8 [a0 + 0x11]\n   481: a2 = u8 [a0 + 0x10]\n   484: a3 = u8 [a0 + 0x12]\n   487: a4 = u8 [a0 + 0x13]\n   490: a1 = a1 << 0x8\n   493: a1 = a1 | a2\n   496: a3 = a3 << 0x10\n   499: a4 = a4 << 0x18\n   502: a3 = a3 | a4\n   505: a1 = a1 | a3\n   508: a2 = u8 [a0 + 0x15]\n   511: a3 = u8 [a0 + 0x14]\n   514: a4 = u8 [a0 + 0x16]\n   517: a5 = u8 [a0 + 0x17]\n   520: a2 = a2 << 0x8\n   523: a2 = a2 | a3\n   526: a4 = a4 << 0x10\n   529: a5 = a5 << 0x18\n   532: a4 = a4 | a5\n   535: a2 = a2 | a4\n   538: a2 = a2 << 0x20\n   541: t0 = a2 | a1\n   544: a2 = u8 [a0 + 0x1]\n   547: a3 = u8 [a0]\n   549: a4 = u8 [a0 + 0x2]\n   552: a5 = u8 [a0 + 0x3]\n   555: a2 = a2 << 0x8\n   558: a2 = a2 | a3\n   561: a4 = a4 << 0x10\n   564: a5 = a5 << 0x18\n   567: a4 = a4 | a5\n   570: a2 = a2 | a4\n   573: a3 = u8 [a0 + 0x5]\n   576: a4 = u8 [a0 + 0x4]\n   579: a5 = u8 [a0 + 0x6]\n   582: s1 = u8 [a0 + 0x7]\n   585: a3 = a3 << 0x8\n   588: a3 = a3 | a4\n   591: a5 = a5 << 0x10\n   594: s1 = s1 << 0x18\n   597: a5 = a5 | s1\n   600: a3 = a3 | a5\n   603: a3 = a3 << 0x20\n   606: a2 = a2 | a3\n   609: a3 = u8 [a0 + 0x19]\n   612: a4 = u8 [a0 + 0x18]\n   615: a5 = u8 [a0 + 0x1a]\n   618: s1 = u8 [a0 + 0x1b]\n   621: a3 = a3 << 0x8\n   624: a3 = a3 | a4\n   627: a5 = a5 << 0x10\n   630: s1 = s1 << 0x18\n   633: a5 = a5 | s1\n   636: a3 = a3 | a5\n   639: a4 = u8 [a0 + 0x1d]\n   642: a5 = u8 [a0 + 0x1c]\n   645: s1 = u8 [a0 + 0x1e]\n   648: a1 = u8 [a0 + 0x1f]\n   651: a4 = a4 << 0x8\n   654: a4 = a4 | a5\n   657: s1 = s1 << 0x10\n   660: a1 = a1 << 0x18\n   663: a1 = a1 | s1\n   666: a1 = a1 | a4\n   669: a1 = a1 << 0x20\n   672: a3 = a3 | a1\n   675: a1 = u8 [a0 + 0x9]\n   678: a4 = u8 [a0 + 0x8]\n   681: a5 = u8 [a0 + 0xa]\n   684: s1 = u8 [a0 + 0xb]\n   687: a1 = a1 << 0x8\n   690: a1 = a1 | a4\n   693: a5 = a5 << 0x10\n   696: s1 = s1 << 0x18\n   699: a5 = a5 | s1\n   702: a1 = a1 | a5\n   705: a4 = u8 [a0 + 0xd]\n   708: a5 = u8 [a0 + 0xc]\n   711: s1 = u8 [a0 + 0xe]\n   714: a0 = u8 [a0 + 0xf]\n   717: a4 = a4 << 0x8\n   720: a4 = a4 | a5\n   723: s1 = s1 << 0x10\n   726: a0 = a0 << 0x18\n   729: a0 = a0 | s1\n   732: a0 = a0 | a4\n   735: a0 = a0 << 0x20\n   738: a0 = a0 | a1\n   741: a0 = reverse a0\n   743: s1 = reverse a3\n   745: a1 = reverse a2\n   747: a2 = reverse t0\n   749: a1 = a1 | a2\n   752: a2 = s1 | a0\n   755: a2 = a2 | a1\n   758: a2 = a2 >> 0x20\n   761: a0 = a0 | a1\n   764: a0 = a0 << 0x20\n   767: a0 = a0 | a2\n   770: jump @21 if a0 == 0\n      : @18 (gas: 1)\n   773: trap\n      : @19 (gas: 3)\n   774: a0 = 0\n   776: a1 = 0\n   778: ra = 12, jump @0\n      : @20 [@dyn 6] (gas: 5)\n   783: i32 a1 = a0 + 0\n   785: a0 = 0x1\n   788: a2 = 0\n   790: ecalli 3 // 'seal_return'\n   792: fallthrough\n      : @21 (gas: 4)\n   793: i32 s1 = s1 + 0\n   795: a0 = s1\n   797: a1 = 0\n   799: ra = 14, jump @0\n      : @22 [@dyn 7] (gas: 7)\n   804: i32 a0 = a0 + 0\n   806: a1 = 0\n   808: a2 = 0\n   810: ecalli 1 // 'call_data_copy'\n   812: i32 a0 = sp + 0x20\n   815: ecalli 0 // 'address'\n   816: fallthrough\n      : @23 (gas: 21)\n   817: a0 = u64 [sp + 0x28]\n   820: a1 = i32 [sp + 0x30]\n   823: a2 = u64 [sp + 0x20]\n   826: a0 = reverse a0\n   828: a3 = a0 << 0x20\n   831: a1 = reverse a1\n   833: a1 = a1 >> 0x20\n   836: a3 = a3 | a1\n   839: a1 = a0 >> 0x20\n   842: a2 = reverse a2\n   844: a4 = a2 << 0x20\n   847: a5 = 0x20000\n   852: a0 = 0x30010\n   857: a4 = a4 | a1\n   860: a2 = a2 >> 0x20\n   863: a1 = i32 [0x20000]\n   868: u64 [0x30020] = a2\n   873: u64 [0x30028] = 0\n   878: u64 [0x30018] = a4\n   883: u64 [0x30010] = a3\n   888: jump @25 if a1 == 0\n      : @24 (gas: 3)\n   891: i32 a0 = a0 + 0\n   893: ecalli 4 // 'set_immutable_data'\n   895: fallthrough\n      : @25 (gas: 3)\n   896: a0 = s1\n   898: a1 = 0\n   900: ra = 16, jump @0\n      : @26 [@dyn 8] (gas: 6)\n   905: i32 a1 = a0 + 0\n   907: a0 = 0\n   909: a2 = 0\n   911: ra = 0x12\n   914: ecalli 3 // 'seal_return'\n   916: fallthrough\n      : @27 [@dyn 9] (gas: 25)\n   917: sp = sp + 0xffffffffffffffd0\n   920: u64 [sp + 0x28] = ra\n   923: u64 [sp + 0x20] = s0\n   926: s0 = sp + 0x30\n   929: sp = sp & 0xfffffffffffffff0\n   932: u64 [sp + 24] = 0\n   935: u64 [sp + 16] = 0\n   938: u64 [sp + 0] = 0x80\n   942: a1 = sp\n   944: u64 [sp + 8] = 0\n   947: ra = 0x14\n   950: sp = sp + 0xffffffffffffffd8\n   953: u64 [sp + 0x20] = ra\n   956: u64 [sp + 0x18] = s0\n   959: u64 [sp + 0x10] = s1\n   962: a2 = u64 [a1]\n   964: u64 [sp + 0x8] = a2\n   967: a2 = u64 [a1 + 0x8]\n   970: u64 [sp] = a2\n   972: s0 = u64 [a1 + 0x10]\n   975: s1 = u64 [a1 + 0x18]\n   978: a0 = 0x40\n   981: a1 = 0x20\n   984: ra = 0x2\n   987: jump @0\n      : @28 [@dyn 10] (gas: 1)\n   990: ra = 22, jump @31\n      : @29 [@dyn 11] (gas: 7)\n   995: sp = sp + 0xfffffffffffffff0\n   998: u64 [sp + 0x8] = ra\n  1001: u64 [sp] = s0\n  1003: s0 = a0\n  1005: a0 = 0x40\n  1008: a1 = 0x20\n  1011: ra = 24, jump @0\n      : @30 [@dyn 12] (gas: 100)\n  1016: a1 = u8 [a0 + 0x1]\n  1019: a2 = u8 [a0]\n  1021: a3 = u8 [a0 + 0x2]\n  1024: a4 = u8 [a0 + 0x3]\n  1027: a1 = a1 << 0x8\n  1030: a1 = a1 | a2\n  1033: a3 = a3 << 0x10\n  1036: a4 = a4 << 0x18\n  1039: a3 = a3 | a4\n  1042: a1 = a1 | a3\n  1045: a2 = u8 [a0 + 0x5]\n  1048: a3 = u8 [a0 + 0x4]\n  1051: a4 = u8 [a0 + 0x6]\n  1054: a5 = u8 [a0 + 0x7]\n  1057: a2 = a2 << 0x8\n  1060: a2 = a2 | a3\n  1063: a4 = a4 << 0x10\n  1066: a5 = a5 << 0x18\n  1069: a4 = a4 | a5\n  1072: a2 = a2 | a4\n  1075: a2 = a2 << 0x20\n  1078: t0 = a2 | a1\n  1081: a2 = u8 [a0 + 0x9]\n  1084: a3 = u8 [a0 + 0x8]\n  1087: a4 = u8 [a0 + 0xa]\n  1090: a5 = u8 [a0 + 0xb]\n  1093: a2 = a2 << 0x8\n  1096: a2 = a2 | a3\n  1099: a4 = a4 << 0x10\n  1102: a5 = a5 << 0x18\n  1105: a4 = a4 | a5\n  1108: a2 = a2 | a4\n  1111: a3 = u8 [a0 + 0xd]\n  1114: a4 = u8 [a0 + 0xc]\n  1117: a5 = u8 [a0 + 0xe]\n  1120: a1 = u8 [a0 + 0xf]\n  1123: a3 = a3 << 0x8\n  1126: a3 = a3 | a4\n  1129: a5 = a5 << 0x10\n  1132: a1 = a1 << 0x18\n  1135: a1 = a1 | a5\n  1138: a1 = a1 | a3\n  1141: a1 = a1 << 0x20\n  1144: t1 = a1 | a2\n  1147: a1 = u8 [a0 + 0x11]\n  1150: a3 = u8 [a0 + 0x10]\n  1153: a4 = u8 [a0 + 0x12]\n  1156: a5 = u8 [a0 + 0x13]\n  1159: a1 = a1 << 0x8\n  1162: a1 = a1 | a3\n  1165: a4 = a4 << 0x10\n  1168: a5 = a5 << 0x18\n  1171: a4 = a4 | a5\n  1174: a1 = a1 | a4\n  1177: a3 = u8 [a0 + 0x15]\n  1180: a4 = u8 [a0 + 0x14]\n  1183: a5 = u8 [a0 + 0x16]\n  1186: a2 = u8 [a0 + 0x17]\n  1189: a3 = a3 << 0x8\n  1192: a3 = a3 | a4\n  1195: a5 = a5 << 0x10\n  1198: a2 = a2 << 0x18\n  1201: a2 = a2 | a5\n  1204: a2 = a2 | a3\n  1207: a2 = a2 << 0x20\n  1210: a3 = a2 | a1\n  1213: a1 = u8 [a0 + 0x19]\n  1216: a2 = u8 [a0 + 0x18]\n  1219: a4 = u8 [a0 + 0x1a]\n  1222: a5 = u8 [a0 + 0x1b]\n  1225: a1 = a1 << 0x8\n  1228: a1 = a1 | a2\n  1231: a4 = a4 << 0x10\n  1234: a5 = a5 << 0x18\n  1237: a4 = a4 | a5\n  1240: a1 = a1 | a4\n  1243: a2 = u8 [a0 + 0x1d]\n  1246: a4 = u8 [a0 + 0x1c]\n  1249: a5 = u8 [a0 + 0x1e]\n  1252: a0 = u8 [a0 + 0x1f]\n  1255: a2 = a2 << 0x8\n  1258: a2 = a2 | a4\n  1261: a5 = a5 << 0x10\n  1264: a0 = a0 << 0x18\n  1267: a0 = a0 | a5\n  1270: a0 = a0 | a2\n  1273: a0 = a0 << 0x20\n  1276: a0 = a0 | a1\n  1279: a0 = reverse a0\n  1281: a1 = reverse a3\n  1283: a2 = reverse t1\n  1285: a3 = reverse t0\n  1287: u64 [s0 + 0x18] = a3\n  1290: u64 [s0 + 0x10] = a2\n  1293: u64 [s0 + 0x8] = a1\n  1296: u64 [s0] = a0\n  1298: ra = u64 [sp + 0x8]\n  1301: s0 = u64 [sp]\n  1303: sp = sp + 0x10\n  1306: ret\n      : @31 (gas: 5)\n  1308: sp = sp + 0xfffffffffffffff8\n  1311: u64 [sp] = ra\n  1313: a0 = 0\n  1315: a1 = 0\n  1317: ra = 26, jump @0\n      : @32 [@dyn 13] (gas: 7)\n  1322: i32 a1 = a0 + 0\n  1324: a0 = 0x1\n  1327: a2 = 0\n  1329: ecalli 3 // 'seal_return'\n  1331: a0 = 0\n  1333: ra = 0x1c\n  1336: jump @9\n      : @33 [export #0: 'call'] (gas: 2)\n  1339: a0 = 0\n  1341: ra = 28, jump @9\n      : @34 [@dyn 14] [export #1: 'deploy'] (gas: 2)\n  1346: a0 = 0x1\n  1349: ra = 30, jump @9\n      : @35 [@dyn 15] (gas: 1)\n  1354: jump @31\n",
						"bytecode": {
							"object": "50564d0000b706000000000000010700c13000c00040030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102853b0463616c6c8542066465706c6f790686180f02854c400028012d014a01de010f03240389039503de03e303f8032a0542054a058b791052093b3309010001ae9833c8780883881f8488e0553801000128390a040002ae8a123d080400023308100002c8870732003308100002c88707320000006f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511f07b10087b158475010a02013d07080002510507501004095010066d029511a07b10587b15507b16489515608411e0330740330820501008bbfe46171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607491118490149110849111083170a0501821710821818821908821ad49808d4a707d487075207370133074033082050100a27fe7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f776fa66f986f29d49808d47609d48909989920d48707977720d49707510717003307330850100cf6fc837833070133090a030183666467330850100ee1fc8377330833090a018317200a018217288118308219206f77977a206f88988820d48a0a9878206f99979b20330c0000023307100003d48b0b98992039080000023e0920000321032800033e0b1800033e0a10000351080883770a0401646733085010107cfc8378330733093300120a03019511d07b10287b15209515308411f04911184911104901800064184911083300149511d87b10207b15187b161082897b19088289087b198285108286183307403308203300022825fc5010163e019511f07b10087b1564753307403308205010180dfc7c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511f87b103307330850101adbfa837833070133090a03330733001c28d6fb330750101cd1fb33070150101ec9fb28d249489220248414d25529494992244992244992244992244992244992244992244952521a12214992248424499224499224499224494a494d529248429224499224499224294992244992244992244992244992244992244992244992a42a4992648552ab5095939492941092104208a915aa34499244499294942449482a09294992244992244992244992244992244992244992244992244992244992244992aa24a5942a942a29240400"
						},
						"deployedBytecode": {
							"object": "50564d0000b706000000000000010700c13000c00040030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102853b0463616c6c8542066465706c6f790686180f02854c400028012d014a01de010f03240389039503de03e303f8032a0542054a058b791052093b3309010001ae9833c8780883881f8488e0553801000128390a040002ae8a123d080400023308100002c8870732003308100002c88707320000006f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511f07b10087b158475010a02013d07080002510507501004095010066d029511a07b10587b15507b16489515608411e0330740330820501008bbfe46171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607491118490149110849111083170a0501821710821818821908821ad49808d4a707d487075207370133074033082050100a27fe7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f776fa66f986f29d49808d47609d48909989920d48707977720d49707510717003307330850100cf6fc837833070133090a030183666467330850100ee1fc8377330833090a018317200a018217288118308219206f77977a206f88988820d48a0a9878206f99979b20330c0000023307100003d48b0b98992039080000023e0920000321032800033e0b1800033e0a10000351080883770a0401646733085010107cfc8378330733093300120a03019511d07b10287b15209515308411f04911184911104901800064184911083300149511d87b10207b15187b161082897b19088289087b198285108286183307403308203300022825fc5010163e019511f07b10087b1564753307403308205010180dfc7c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511f87b103307330850101adbfa837833070133090a03330733001c28d6fb330750101cd1fb33070150101ec9fb28d249489220248414d25529494992244992244992244992244992244992244992244952521a12214992248424499224499224499224494a494d529248429224499224499224294992244992244992244992244992244992244992244992a42a4992648552ab5095939492941092104208a915aa34499244499294942449482a09294992244992244992244992244992244992244992244992244992244992244992aa24a5942a942a29240400"
						},
						"methodIdentifiers": {}
					},
					"irOptimized": "/// @use-src 0:\"ECDSA.sol\"\nobject \"ECDSA_347\" {\n    code {\n        {\n            /// @src 0:344:7730  \"library ECDSA {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            let _1 := allocate_unbounded()\n            codecopy(_1, dataoffset(\"ECDSA_347_deployed\"), datasize(\"ECDSA_347_deployed\"))\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, datasize(\"ECDSA_347_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n    }\n    /// @use-src 0:\"ECDSA.sol\"\n    object \"ECDSA_347_deployed\" {\n        code {\n            {\n                /// @src 0:344:7730  \"library ECDSA {...\"\n                mstore(64, memoryguard(0x80))\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n        }\n        data \".metadata\" hex\"a2646970667358221220b6f9c04b57eb7b95b30149f94c3f0969ea0f2767964317ba9dc684d72a1b581864736f6c634300081c0033\"\n    }\n}\n",
					"hash": "fab3d82f9929e7670e2b5da35abe1f8496614c48168bb74d24f035eb11c39480",
					"factoryDependencies": {}
				}
			},
			"SignatureVerifier.sol": {
				"SignatureVerifier": {
					"abi": [],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SignatureVerifier.sol\":\"SignatureVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"SignatureVerifier.sol\":{\"keccak256\":\"0xc1d30621557da515270569c4b5ee5abed3c1266b4ea44ad0ce6bd2f7eff30f29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30d2453fb9dc02e392a8243a577d39357d4f253661c6f02f845b9051bea4037a\",\"dweb:/ipfs/QmXb4TDEWAXwTHi3awHes3XEWEXMwTwbHHY5rh3rephNuh\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 4/65584 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 462\n// Code size = 1356 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20004]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20004] = a1\n    42: a1 = 0x20010\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20010\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 [@dyn 1] (gas: 71)\n    64: a1 = reverse s1\n    66: a2 = reverse s0\n    68: a3 = u64 [sp]\n    70: a3 = reverse a3\n    72: a4 = u64 [sp + 0x8]\n    75: a4 = reverse a4\n    77: u8 [a0 + 0x18] = a4\n    80: u8 [a0 + 0x10] = a3\n    83: u8 [a0 + 0x8] = a2\n    86: u8 [a0] = a1\n    88: a5 = a4 >> 0x38\n    91: u8 [a0 + 0x1f] = a5\n    94: a5 = a4 >> 0x30\n    97: u8 [a0 + 0x1e] = a5\n   100: a5 = a4 >> 0x28\n   103: u8 [a0 + 0x1d] = a5\n   106: a5 = a4 >> 0x20\n   109: u8 [a0 + 0x1c] = a5\n   112: a5 = a4 >> 0x18\n   115: u8 [a0 + 0x1b] = a5\n   118: a5 = a4 >> 0x10\n   121: u8 [a0 + 0x1a] = a5\n   124: a4 = a4 >> 0x8\n   127: u8 [a0 + 0x19] = a4\n   130: a4 = a3 >> 0x38\n   133: u8 [a0 + 0x17] = a4\n   136: a4 = a3 >> 0x30\n   139: u8 [a0 + 0x16] = a4\n   142: a4 = a3 >> 0x28\n   145: u8 [a0 + 0x15] = a4\n   148: a4 = a3 >> 0x20\n   151: u8 [a0 + 0x14] = a4\n   154: a4 = a3 >> 0x18\n   157: u8 [a0 + 0x13] = a4\n   160: a4 = a3 >> 0x10\n   163: u8 [a0 + 0x12] = a4\n   166: a3 = a3 >> 0x8\n   169: u8 [a0 + 0x11] = a3\n   172: a3 = a2 >> 0x38\n   175: u8 [a0 + 0xf] = a3\n   178: a3 = a2 >> 0x30\n   181: u8 [a0 + 0xe] = a3\n   184: a3 = a2 >> 0x28\n   187: u8 [a0 + 0xd] = a3\n   190: a3 = a2 >> 0x20\n   193: u8 [a0 + 0xc] = a3\n   196: a3 = a2 >> 0x18\n   199: u8 [a0 + 0xb] = a3\n   202: a3 = a2 >> 0x10\n   205: u8 [a0 + 0xa] = a3\n   208: a2 = a2 >> 0x8\n   211: u8 [a0 + 0x9] = a2\n   214: a2 = a1 >> 0x38\n   217: u8 [a0 + 0x7] = a2\n   220: a2 = a1 >> 0x30\n   223: u8 [a0 + 0x6] = a2\n   226: a2 = a1 >> 0x28\n   229: u8 [a0 + 0x5] = a2\n   232: a2 = a1 >> 0x20\n   235: u8 [a0 + 0x4] = a2\n   238: a2 = a1 >> 0x18\n   241: u8 [a0 + 0x3] = a2\n   244: a2 = a1 >> 0x10\n   247: u8 [a0 + 0x2] = a2\n   250: a1 = a1 >> 0x8\n   253: u8 [a0 + 0x1] = a1\n   256: ra = u64 [sp + 0x20]\n   259: s0 = u64 [sp + 0x18]\n   262: s1 = u64 [sp + 0x10]\n   265: sp = sp + 0x28\n   268: ret\n      : @9 (gas: 6)\n   270: sp = sp + 0xfffffffffffffff0\n   273: u64 [sp + 0x8] = ra\n   276: u64 [sp] = s0\n   278: s0 = a0 & 0x1\n   281: ecalli 2 // 'call_data_size'\n   283: fallthrough\n      : @10 (gas: 2)\n   284: u32 [0x20008] = a0\n   289: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   292: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   296: ra = 6, jump @27\n      : @13 [@dyn 3] (gas: 9)\n   301: sp = sp + 0xffffffffffffffa0\n   304: u64 [sp + 0x58] = ra\n   307: u64 [sp + 0x50] = s0\n   310: u64 [sp + 0x48] = s1\n   313: s0 = sp + 0x60\n   316: sp = sp & 0xffffffffffffffe0\n   319: a0 = 0x40\n   322: a1 = 0x20\n   325: ra = 8, jump @0\n      : @14 [@dyn 4] (gas: 39)\n   330: u8 [a0 + 31] = 0x80\n   335: u8 [a0 + 30] = 0\n   338: u8 [a0 + 29] = 0\n   341: u8 [a0 + 28] = 0\n   344: u8 [a0 + 27] = 0\n   347: u8 [a0 + 26] = 0\n   350: u8 [a0 + 25] = 0\n   353: u8 [a0 + 24] = 0\n   356: u8 [a0 + 23] = 0\n   359: u8 [a0 + 22] = 0\n   362: u8 [a0 + 21] = 0\n   365: u8 [a0 + 20] = 0\n   368: u8 [a0 + 19] = 0\n   371: u8 [a0 + 18] = 0\n   374: u8 [a0 + 17] = 0\n   377: u8 [a0 + 16] = 0\n   380: u8 [a0 + 15] = 0\n   383: u8 [a0 + 14] = 0\n   386: u8 [a0 + 13] = 0\n   389: u8 [a0 + 12] = 0\n   392: u8 [a0 + 11] = 0\n   395: u8 [a0 + 10] = 0\n   398: u8 [a0 + 9] = 0\n   401: u8 [a0 + 8] = 0\n   404: u8 [a0 + 7] = 0\n   407: u8 [a0 + 6] = 0\n   410: u8 [a0 + 5] = 0\n   413: u8 [a0 + 4] = 0\n   416: u8 [a0 + 3] = 0\n   419: u8 [a0 + 2] = 0\n   422: u8 [a0 + 1] = 0\n   425: u8 [a0 + 0] = 0\n   427: u64 [sp + 24] = 0\n   430: u64 [sp + 0] = 0\n   432: u64 [sp + 8] = 0\n   435: u64 [sp + 16] = 0\n   438: i32 a0 = sp + 0\n   440: ecalli 5 // 'value_transferred'\n   442: fallthrough\n      : @15 (gas: 8)\n   443: a0 = u64 [sp + 0x10]\n   446: a1 = u64 [sp + 0x18]\n   449: a2 = u64 [sp + 0x8]\n   452: a3 = u64 [sp]\n   454: a1 = a1 | a2\n   457: a0 = a0 | a3\n   460: a0 = a0 | a1\n   463: jump @19 if a0 != 0\n      : @16 (gas: 3)\n   467: a0 = 0x40\n   470: a1 = 0x20\n   473: ra = 10, jump @0\n      : @17 [@dyn 5] (gas: 100)\n   478: a1 = u8 [a0 + 0x11]\n   481: a2 = u8 [a0 + 0x10]\n   484: a3 = u8 [a0 + 0x12]\n   487: a4 = u8 [a0 + 0x13]\n   490: a1 = a1 << 0x8\n   493: a1 = a1 | a2\n   496: a3 = a3 << 0x10\n   499: a4 = a4 << 0x18\n   502: a3 = a3 | a4\n   505: a1 = a1 | a3\n   508: a2 = u8 [a0 + 0x15]\n   511: a3 = u8 [a0 + 0x14]\n   514: a4 = u8 [a0 + 0x16]\n   517: a5 = u8 [a0 + 0x17]\n   520: a2 = a2 << 0x8\n   523: a2 = a2 | a3\n   526: a4 = a4 << 0x10\n   529: a5 = a5 << 0x18\n   532: a4 = a4 | a5\n   535: a2 = a2 | a4\n   538: a2 = a2 << 0x20\n   541: t0 = a2 | a1\n   544: a2 = u8 [a0 + 0x1]\n   547: a3 = u8 [a0]\n   549: a4 = u8 [a0 + 0x2]\n   552: a5 = u8 [a0 + 0x3]\n   555: a2 = a2 << 0x8\n   558: a2 = a2 | a3\n   561: a4 = a4 << 0x10\n   564: a5 = a5 << 0x18\n   567: a4 = a4 | a5\n   570: a2 = a2 | a4\n   573: a3 = u8 [a0 + 0x5]\n   576: a4 = u8 [a0 + 0x4]\n   579: a5 = u8 [a0 + 0x6]\n   582: s1 = u8 [a0 + 0x7]\n   585: a3 = a3 << 0x8\n   588: a3 = a3 | a4\n   591: a5 = a5 << 0x10\n   594: s1 = s1 << 0x18\n   597: a5 = a5 | s1\n   600: a3 = a3 | a5\n   603: a3 = a3 << 0x20\n   606: a2 = a2 | a3\n   609: a3 = u8 [a0 + 0x19]\n   612: a4 = u8 [a0 + 0x18]\n   615: a5 = u8 [a0 + 0x1a]\n   618: s1 = u8 [a0 + 0x1b]\n   621: a3 = a3 << 0x8\n   624: a3 = a3 | a4\n   627: a5 = a5 << 0x10\n   630: s1 = s1 << 0x18\n   633: a5 = a5 | s1\n   636: a3 = a3 | a5\n   639: a4 = u8 [a0 + 0x1d]\n   642: a5 = u8 [a0 + 0x1c]\n   645: s1 = u8 [a0 + 0x1e]\n   648: a1 = u8 [a0 + 0x1f]\n   651: a4 = a4 << 0x8\n   654: a4 = a4 | a5\n   657: s1 = s1 << 0x10\n   660: a1 = a1 << 0x18\n   663: a1 = a1 | s1\n   666: a1 = a1 | a4\n   669: a1 = a1 << 0x20\n   672: a3 = a3 | a1\n   675: a1 = u8 [a0 + 0x9]\n   678: a4 = u8 [a0 + 0x8]\n   681: a5 = u8 [a0 + 0xa]\n   684: s1 = u8 [a0 + 0xb]\n   687: a1 = a1 << 0x8\n   690: a1 = a1 | a4\n   693: a5 = a5 << 0x10\n   696: s1 = s1 << 0x18\n   699: a5 = a5 | s1\n   702: a1 = a1 | a5\n   705: a4 = u8 [a0 + 0xd]\n   708: a5 = u8 [a0 + 0xc]\n   711: s1 = u8 [a0 + 0xe]\n   714: a0 = u8 [a0 + 0xf]\n   717: a4 = a4 << 0x8\n   720: a4 = a4 | a5\n   723: s1 = s1 << 0x10\n   726: a0 = a0 << 0x18\n   729: a0 = a0 | s1\n   732: a0 = a0 | a4\n   735: a0 = a0 << 0x20\n   738: a0 = a0 | a1\n   741: a0 = reverse a0\n   743: s1 = reverse a3\n   745: a1 = reverse a2\n   747: a2 = reverse t0\n   749: a1 = a1 | a2\n   752: a2 = s1 | a0\n   755: a2 = a2 | a1\n   758: a2 = a2 >> 0x20\n   761: a0 = a0 | a1\n   764: a0 = a0 << 0x20\n   767: a0 = a0 | a2\n   770: jump @21 if a0 == 0\n      : @18 (gas: 1)\n   773: trap\n      : @19 (gas: 3)\n   774: a0 = 0\n   776: a1 = 0\n   778: ra = 12, jump @0\n      : @20 [@dyn 6] (gas: 5)\n   783: i32 a1 = a0 + 0\n   785: a0 = 0x1\n   788: a2 = 0\n   790: ecalli 3 // 'seal_return'\n   792: fallthrough\n      : @21 (gas: 4)\n   793: i32 s1 = s1 + 0\n   795: a0 = s1\n   797: a1 = 0\n   799: ra = 14, jump @0\n      : @22 [@dyn 7] (gas: 7)\n   804: i32 a0 = a0 + 0\n   806: a1 = 0\n   808: a2 = 0\n   810: ecalli 1 // 'call_data_copy'\n   812: i32 a0 = sp + 0x20\n   815: ecalli 0 // 'address'\n   816: fallthrough\n      : @23 (gas: 21)\n   817: a0 = u64 [sp + 0x28]\n   820: a1 = i32 [sp + 0x30]\n   823: a2 = u64 [sp + 0x20]\n   826: a0 = reverse a0\n   828: a3 = a0 << 0x20\n   831: a1 = reverse a1\n   833: a1 = a1 >> 0x20\n   836: a3 = a3 | a1\n   839: a1 = a0 >> 0x20\n   842: a2 = reverse a2\n   844: a4 = a2 << 0x20\n   847: a5 = 0x20000\n   852: a0 = 0x30010\n   857: a4 = a4 | a1\n   860: a2 = a2 >> 0x20\n   863: a1 = i32 [0x20000]\n   868: u64 [0x30020] = a2\n   873: u64 [0x30028] = 0\n   878: u64 [0x30018] = a4\n   883: u64 [0x30010] = a3\n   888: jump @25 if a1 == 0\n      : @24 (gas: 3)\n   891: i32 a0 = a0 + 0\n   893: ecalli 4 // 'set_immutable_data'\n   895: fallthrough\n      : @25 (gas: 3)\n   896: a0 = s1\n   898: a1 = 0\n   900: ra = 16, jump @0\n      : @26 [@dyn 8] (gas: 6)\n   905: i32 a1 = a0 + 0\n   907: a0 = 0\n   909: a2 = 0\n   911: ra = 0x12\n   914: ecalli 3 // 'seal_return'\n   916: fallthrough\n      : @27 [@dyn 9] (gas: 25)\n   917: sp = sp + 0xffffffffffffffd0\n   920: u64 [sp + 0x28] = ra\n   923: u64 [sp + 0x20] = s0\n   926: s0 = sp + 0x30\n   929: sp = sp & 0xfffffffffffffff0\n   932: u64 [sp + 24] = 0\n   935: u64 [sp + 16] = 0\n   938: u64 [sp + 0] = 0x80\n   942: a1 = sp\n   944: u64 [sp + 8] = 0\n   947: ra = 0x14\n   950: sp = sp + 0xffffffffffffffd8\n   953: u64 [sp + 0x20] = ra\n   956: u64 [sp + 0x18] = s0\n   959: u64 [sp + 0x10] = s1\n   962: a2 = u64 [a1]\n   964: u64 [sp + 0x8] = a2\n   967: a2 = u64 [a1 + 0x8]\n   970: u64 [sp] = a2\n   972: s0 = u64 [a1 + 0x10]\n   975: s1 = u64 [a1 + 0x18]\n   978: a0 = 0x40\n   981: a1 = 0x20\n   984: ra = 0x2\n   987: jump @0\n      : @28 [@dyn 10] (gas: 1)\n   990: ra = 22, jump @31\n      : @29 [@dyn 11] (gas: 7)\n   995: sp = sp + 0xfffffffffffffff0\n   998: u64 [sp + 0x8] = ra\n  1001: u64 [sp] = s0\n  1003: s0 = a0\n  1005: a0 = 0x40\n  1008: a1 = 0x20\n  1011: ra = 24, jump @0\n      : @30 [@dyn 12] (gas: 100)\n  1016: a1 = u8 [a0 + 0x1]\n  1019: a2 = u8 [a0]\n  1021: a3 = u8 [a0 + 0x2]\n  1024: a4 = u8 [a0 + 0x3]\n  1027: a1 = a1 << 0x8\n  1030: a1 = a1 | a2\n  1033: a3 = a3 << 0x10\n  1036: a4 = a4 << 0x18\n  1039: a3 = a3 | a4\n  1042: a1 = a1 | a3\n  1045: a2 = u8 [a0 + 0x5]\n  1048: a3 = u8 [a0 + 0x4]\n  1051: a4 = u8 [a0 + 0x6]\n  1054: a5 = u8 [a0 + 0x7]\n  1057: a2 = a2 << 0x8\n  1060: a2 = a2 | a3\n  1063: a4 = a4 << 0x10\n  1066: a5 = a5 << 0x18\n  1069: a4 = a4 | a5\n  1072: a2 = a2 | a4\n  1075: a2 = a2 << 0x20\n  1078: t0 = a2 | a1\n  1081: a2 = u8 [a0 + 0x9]\n  1084: a3 = u8 [a0 + 0x8]\n  1087: a4 = u8 [a0 + 0xa]\n  1090: a5 = u8 [a0 + 0xb]\n  1093: a2 = a2 << 0x8\n  1096: a2 = a2 | a3\n  1099: a4 = a4 << 0x10\n  1102: a5 = a5 << 0x18\n  1105: a4 = a4 | a5\n  1108: a2 = a2 | a4\n  1111: a3 = u8 [a0 + 0xd]\n  1114: a4 = u8 [a0 + 0xc]\n  1117: a5 = u8 [a0 + 0xe]\n  1120: a1 = u8 [a0 + 0xf]\n  1123: a3 = a3 << 0x8\n  1126: a3 = a3 | a4\n  1129: a5 = a5 << 0x10\n  1132: a1 = a1 << 0x18\n  1135: a1 = a1 | a5\n  1138: a1 = a1 | a3\n  1141: a1 = a1 << 0x20\n  1144: t1 = a1 | a2\n  1147: a1 = u8 [a0 + 0x11]\n  1150: a3 = u8 [a0 + 0x10]\n  1153: a4 = u8 [a0 + 0x12]\n  1156: a5 = u8 [a0 + 0x13]\n  1159: a1 = a1 << 0x8\n  1162: a1 = a1 | a3\n  1165: a4 = a4 << 0x10\n  1168: a5 = a5 << 0x18\n  1171: a4 = a4 | a5\n  1174: a1 = a1 | a4\n  1177: a3 = u8 [a0 + 0x15]\n  1180: a4 = u8 [a0 + 0x14]\n  1183: a5 = u8 [a0 + 0x16]\n  1186: a2 = u8 [a0 + 0x17]\n  1189: a3 = a3 << 0x8\n  1192: a3 = a3 | a4\n  1195: a5 = a5 << 0x10\n  1198: a2 = a2 << 0x18\n  1201: a2 = a2 | a5\n  1204: a2 = a2 | a3\n  1207: a2 = a2 << 0x20\n  1210: a3 = a2 | a1\n  1213: a1 = u8 [a0 + 0x19]\n  1216: a2 = u8 [a0 + 0x18]\n  1219: a4 = u8 [a0 + 0x1a]\n  1222: a5 = u8 [a0 + 0x1b]\n  1225: a1 = a1 << 0x8\n  1228: a1 = a1 | a2\n  1231: a4 = a4 << 0x10\n  1234: a5 = a5 << 0x18\n  1237: a4 = a4 | a5\n  1240: a1 = a1 | a4\n  1243: a2 = u8 [a0 + 0x1d]\n  1246: a4 = u8 [a0 + 0x1c]\n  1249: a5 = u8 [a0 + 0x1e]\n  1252: a0 = u8 [a0 + 0x1f]\n  1255: a2 = a2 << 0x8\n  1258: a2 = a2 | a4\n  1261: a5 = a5 << 0x10\n  1264: a0 = a0 << 0x18\n  1267: a0 = a0 | a5\n  1270: a0 = a0 | a2\n  1273: a0 = a0 << 0x20\n  1276: a0 = a0 | a1\n  1279: a0 = reverse a0\n  1281: a1 = reverse a3\n  1283: a2 = reverse t1\n  1285: a3 = reverse t0\n  1287: u64 [s0 + 0x18] = a3\n  1290: u64 [s0 + 0x10] = a2\n  1293: u64 [s0 + 0x8] = a1\n  1296: u64 [s0] = a0\n  1298: ra = u64 [sp + 0x8]\n  1301: s0 = u64 [sp]\n  1303: sp = sp + 0x10\n  1306: ret\n      : @31 (gas: 5)\n  1308: sp = sp + 0xfffffffffffffff8\n  1311: u64 [sp] = ra\n  1313: a0 = 0\n  1315: a1 = 0\n  1317: ra = 26, jump @0\n      : @32 [@dyn 13] (gas: 7)\n  1322: i32 a1 = a0 + 0\n  1324: a0 = 0x1\n  1327: a2 = 0\n  1329: ecalli 3 // 'seal_return'\n  1331: a0 = 0\n  1333: ra = 0x1c\n  1336: jump @9\n      : @33 [export #0: 'call'] (gas: 2)\n  1339: a0 = 0\n  1341: ra = 28, jump @9\n      : @34 [@dyn 14] [export #1: 'deploy'] (gas: 2)\n  1346: a0 = 0x1\n  1349: ra = 30, jump @9\n      : @35 [@dyn 15] (gas: 1)\n  1354: jump @31\n",
						"bytecode": {
							"object": "50564d0000b706000000000000010700c13000c00040030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102853b0463616c6c8542066465706c6f790686180f02854c400028012d014a01de010f03240389039503de03e303f8032a0542054a058b791052093b3309010001ae9833c8780883881f8488e0553801000128390a040002ae8a123d080400023308100002c8870732003308100002c88707320000006f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511f07b10087b158475010a02013d07080002510507501004095010066d029511a07b10587b15507b16489515608411e0330740330820501008bbfe46171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607491118490149110849111083170a0501821710821818821908821ad49808d4a707d487075207370133074033082050100a27fe7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f776fa66f986f29d49808d47609d48909989920d48707977720d49707510717003307330850100cf6fc837833070133090a030183666467330850100ee1fc8377330833090a018317200a018217288118308219206f77977a206f88988820d48a0a9878206f99979b20330c0000023307100003d48b0b98992039080000023e0920000321032800033e0b1800033e0a10000351080883770a0401646733085010107cfc8378330733093300120a03019511d07b10287b15209515308411f04911184911104901800064184911083300149511d87b10207b15187b161082897b19088289087b198285108286183307403308203300022825fc5010163e019511f07b10087b1564753307403308205010180dfc7c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511f87b103307330850101adbfa837833070133090a03330733001c28d6fb330750101cd1fb33070150101ec9fb28d249489220248414d25529494992244992244992244992244992244992244992244952521a12214992248424499224499224499224494a494d529248429224499224499224294992244992244992244992244992244992244992244992a42a4992648552ab5095939492941092104208a915aa34499244499294942449482a09294992244992244992244992244992244992244992244992244992244992244992aa24a5942a942a29240400"
						},
						"deployedBytecode": {
							"object": "50564d0000b706000000000000010700c13000c00040030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102853b0463616c6c8542066465706c6f790686180f02854c400028012d014a01de010f03240389039503de03e303f8032a0542054a058b791052093b3309010001ae9833c8780883881f8488e0553801000128390a040002ae8a123d080400023308100002c8870732003308100002c88707320000006f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511f07b10087b158475010a02013d07080002510507501004095010066d029511a07b10587b15507b16489515608411e0330740330820501008bbfe46171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607491118490149110849111083170a0501821710821818821908821ad49808d4a707d487075207370133074033082050100a27fe7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f776fa66f986f29d49808d47609d48909989920d48707977720d49707510717003307330850100cf6fc837833070133090a030183666467330850100ee1fc8377330833090a018317200a018217288118308219206f77977a206f88988820d48a0a9878206f99979b20330c0000023307100003d48b0b98992039080000023e0920000321032800033e0b1800033e0a10000351080883770a0401646733085010107cfc8378330733093300120a03019511d07b10287b15209515308411f04911184911104901800064184911083300149511d87b10207b15187b161082897b19088289087b198285108286183307403308203300022825fc5010163e019511f07b10087b1564753307403308205010180dfc7c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511f87b103307330850101adbfa837833070133090a03330733001c28d6fb330750101cd1fb33070150101ec9fb28d249489220248414d25529494992244992244992244992244992244992244992244952521a12214992248424499224499224499224494a494d529248429224499224499224294992244992244992244992244992244992244992244992a42a4992648552ab5095939492941092104208a915aa34499244499294942449482a09294992244992244992244992244992244992244992244992244992244992244992aa24a5942a942a29240400"
						},
						"methodIdentifiers": {}
					},
					"irOptimized": "/// @use-src 1:\"SignatureVerifier.sol\"\nobject \"SignatureVerifier_440\" {\n    code {\n        {\n            /// @src 1:80:1895  \"library SignatureVerifier {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            let _1 := allocate_unbounded()\n            codecopy(_1, dataoffset(\"SignatureVerifier_440_deployed\"), datasize(\"SignatureVerifier_440_deployed\"))\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, datasize(\"SignatureVerifier_440_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n    }\n    /// @use-src 1:\"SignatureVerifier.sol\"\n    object \"SignatureVerifier_440_deployed\" {\n        code {\n            {\n                /// @src 1:80:1895  \"library SignatureVerifier {...\"\n                mstore(64, memoryguard(0x80))\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n        }\n        data \".metadata\" hex\"a2646970667358221220597230c1c868f4dde5dccdf82222bcf190abb0e6e02879eef8f9dc88f6da91aa64736f6c634300081c0033\"\n    }\n}\n",
					"hash": "fab3d82f9929e7670e2b5da35abe1f8496614c48168bb74d24f035eb11c39480",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"ECDSA.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							347
						]
					},
					"id": 348,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 347,
							"linearizedBaseContracts": [
								347
							],
							"name": "ECDSA",
							"nameLocation": "352:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 7,
									"members": [
										{
											"id": 3,
											"name": "NoError",
											"nameLocation": "392:7:0",
											"nodeType": "EnumValue",
											"src": "392:7:0"
										},
										{
											"id": 4,
											"name": "InvalidSignature",
											"nameLocation": "409:16:0",
											"nodeType": "EnumValue",
											"src": "409:16:0"
										},
										{
											"id": 5,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:0",
											"nodeType": "EnumValue",
											"src": "435:22:0"
										},
										{
											"id": 6,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:0",
											"nodeType": "EnumValue",
											"src": "467:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:0",
									"nodeType": "EnumDefinition",
									"src": "364:126:0"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:0",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 10,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:0"
									},
									"src": "564:30:0"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:0",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 15,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "699:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:0"
									},
									"src": "665:50:0"
								},
								{
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:0",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 20,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "840:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:0"
									},
									"src": "811:40:0"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2242:653:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 35,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2256:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "2781:108:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 59,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 58,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 57,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 61,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "2815:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:0",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "2815:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$7",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 65,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "2860:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 64,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 63,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 68,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 34,
															"id": 69,
															"nodeType": "Return",
															"src": "2795:83:0"
														}
													]
												},
												"id": 71,
												"nodeType": "IfStatement",
												"src": "2252:637:0",
												"trueBody": {
													"id": 56,
													"nodeType": "Block",
													"src": "2280:495:0",
													"statements": [
														{
															"assignments": [
																40
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 40,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 56,
																	"src": "2294:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 39,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 41,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:0"
														},
														{
															"assignments": [
																43
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 43,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 56,
																	"src": "2317:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 42,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 44,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:0"
														},
														{
															"assignments": [
																46
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 46,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 56,
																	"src": "2340:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 45,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 47,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:0"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:0",
																"nodeType": "YulBlock",
																"src": "2548:171:0",
																"statements": [
																	{
																		"nativeSrc": "2566:32:0",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:0",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:0"
																					},
																					"nativeSrc": "2577:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:0"
																			},
																			"nativeSrc": "2571:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:0",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:0",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:0"
																					},
																					"nativeSrc": "2626:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:0"
																			},
																			"nativeSrc": "2620:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:0",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:0",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:0",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:0"
																							},
																							"nativeSrc": "2683:20:0",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:0"
																					},
																					"nativeSrc": "2677:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:0"
																			},
																			"nativeSrc": "2669:36:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:0"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 40,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 43,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 25,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 25,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 25,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 46,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:0",
																	"valueSize": 1
																}
															],
															"id": 48,
															"nodeType": "InlineAssembly",
															"src": "2539:180:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 50,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "2750:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 51,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "2756:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 52,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "2759:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 53,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "2762:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 49,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		73,
																		153,
																		261
																	],
																	"referencedDeclaration": 261,
																	"src": "2739:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 34,
															"id": 55,
															"nodeType": "Return",
															"src": "2732:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2149:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 22,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2163:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 24,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$7",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 30,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 29,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "2219:12:0"
													},
													"referencedDeclaration": 7,
													"src": "2219:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$7",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:0"
									},
									"scope": 347,
									"src": "2129:766:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "3789:168:0",
										"statements": [
											{
												"assignments": [
													84,
													87,
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 84,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "3800:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 83,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 87,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "3819:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$7",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 86,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 85,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 7,
																"src": "3819:12:0"
															},
															"referencedDeclaration": 7,
															"src": "3819:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "3839:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 88,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"arguments": [
														{
															"id": 91,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "3870:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 92,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "3876:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 90,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															73,
															153,
															261
														],
														"referencedDeclaration": 73,
														"src": "3859:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "3908:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 97,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "3915:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 95,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3896:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$7_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:0"
											},
											{
												"expression": {
													"id": 100,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 84,
													"src": "3941:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 82,
												"id": 101,
												"nodeType": "Return",
												"src": "3934:16:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3719:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 75,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3733:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3780:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:0"
									},
									"scope": 347,
									"src": "3702:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "4285:342:0",
										"statements": [
											{
												"id": 151,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:0",
												"statements": [
													{
														"assignments": [
															121
														],
														"declarations": [
															{
																"constant": false,
																"id": 121,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 151,
																"src": "4319:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 120,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 128,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "4331:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 123,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:0"
													},
													{
														"assignments": [
															130
														],
														"declarations": [
															{
																"constant": false,
																"id": 130,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 151,
																"src": "4522:7:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 129,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 143,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 135,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 110,
																							"src": "4547:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 134,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 133,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 136,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 139,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 131,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 145,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "4596:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 146,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4602:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 147,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "4605:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 148,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "4608:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 144,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	73,
																	153,
																	261
																],
																"referencedDeclaration": 261,
																"src": "4585:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 119,
														"id": 150,
														"nodeType": "Return",
														"src": "4578:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 105,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4207:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4218:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4253:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4262:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$7",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 115,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 114,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "4262:12:0"
													},
													"referencedDeclaration": 7,
													"src": "4262:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$7",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:0"
									},
									"scope": 347,
									"src": "4173:454:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "4840:164:0",
										"statements": [
											{
												"assignments": [
													166,
													169,
													171
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "4851:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 165,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "4870:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$7",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 168,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 167,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 7,
																"src": "4870:12:0"
															},
															"referencedDeclaration": 7,
															"src": "4870:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 171,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "4890:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 170,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"arguments": [
														{
															"id": 173,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4921:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 174,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4927:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 175,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4930:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 172,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															73,
															153,
															261
														],
														"referencedDeclaration": 153,
														"src": "4910:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4955:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 180,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4962:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 178,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "4943:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$7_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:0"
											},
											{
												"expression": {
													"id": 183,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "4988:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 164,
												"id": 184,
												"nodeType": "Return",
												"src": "4981:16:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4771:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4785:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4796:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4831:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:0"
									},
									"scope": 347,
									"src": "4754:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "5298:1372:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 207,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "6194:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 205,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 221,
												"nodeType": "IfStatement",
												"src": "6182:164:0",
												"trueBody": {
													"id": 220,
													"nodeType": "Block",
													"src": "6267:79:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 211,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 215,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "6301:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:0",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6,
																		"src": "6301:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$7",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 217,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "6333:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 218,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 204,
															"id": 219,
															"nodeType": "Return",
															"src": "6281:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "6440:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"arguments": [
														{
															"id": 225,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6467:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 226,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6473:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 227,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "6476:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6479:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 224,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 231,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "6495:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 232,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 250,
												"nodeType": "IfStatement",
												"src": "6491:113:0",
												"trueBody": {
													"id": 249,
													"nodeType": "Block",
													"src": "6517:87:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 237,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 241,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "6551:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:0",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4,
																		"src": "6551:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$7",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 243,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 247,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 204,
															"id": 248,
															"nodeType": "Return",
															"src": "6531:62:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 251,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "6622:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 252,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "6630:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:0",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "6630:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 254,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 258,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 204,
												"id": 259,
												"nodeType": "Return",
												"src": "6614:49:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "5169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "5191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 190,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "5208:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "5227:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "5266:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "5275:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$7",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 199,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "5275:12:0"
													},
													"referencedDeclaration": 7,
													"src": "5275:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$7",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "5289:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 202,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:0"
									},
									"scope": 347,
									"src": "5140:1530:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "6897:166:0",
										"statements": [
											{
												"assignments": [
													276,
													279,
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "6908:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 275,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 279,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "6927:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$7",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 278,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 277,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 7,
																"src": "6927:12:0"
															},
															"referencedDeclaration": 7,
															"src": "6927:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "6947:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 280,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"arguments": [
														{
															"id": 283,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "6978:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 284,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "6984:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 285,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "6987:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 286,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "6990:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 282,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															73,
															153,
															261
														],
														"referencedDeclaration": 261,
														"src": "6967:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "7014:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 291,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "7021:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 289,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "7002:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$7_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:0"
											},
											{
												"expression": {
													"id": 294,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "7047:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 274,
												"id": 295,
												"nodeType": "Return",
												"src": "7040:16:0"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "6820:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 263,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "6834:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 265,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "6843:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 267,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "6854:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "6888:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:0"
									},
									"scope": 347,
									"src": "6803:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7268:460:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$7",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 306,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "7282:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$7",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 307,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "7291:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:0",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "7291:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$7",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$7",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 312,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "7378:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 313,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "7387:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:0",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "7387:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$7",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "7483:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$7",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 321,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "7492:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:0",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "7492:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$7",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$7",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 332,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "7617:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$7",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 333,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "7626:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:0",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "7626:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$7",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 341,
															"nodeType": "IfStatement",
															"src": "7613:109:0",
															"trueBody": {
																"id": 340,
																"nodeType": "Block",
																"src": "7658:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 337,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 303,
																					"src": "7702:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 336,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "7679:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 339,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:0"
																	}
																]
															}
														},
														"id": 342,
														"nodeType": "IfStatement",
														"src": "7479:243:0",
														"trueBody": {
															"id": 331,
															"nodeType": "Block",
															"src": "7529:78:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 327,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 303,
																						"src": "7586:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 325,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 324,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "7550:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 330,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:0"
																}
															]
														}
													},
													"id": 343,
													"nodeType": "IfStatement",
													"src": "7374:348:0",
													"trueBody": {
														"id": 319,
														"nodeType": "Block",
														"src": "7418:55:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 316,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "7439:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 318,
																"nodeType": "RevertStatement",
																"src": "7432:30:0"
															}
														]
													}
												},
												"id": 344,
												"nodeType": "IfStatement",
												"src": "7278:444:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "7313:55:0",
													"statements": [
														{
															"functionReturnParameters": 305,
															"id": 310,
															"nodeType": "Return",
															"src": "7327:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:0",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7217:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$7",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 299,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "7217:12:0"
													},
													"referencedDeclaration": 7,
													"src": "7217:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$7",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7237:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:0"
									},
									"scope": 347,
									"src": "7196:532:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 348,
							"src": "344:7386:0",
							"usedErrors": [
								10,
								15,
								20
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:0"
				}
			},
			"SignatureVerifier.sol": {
				"id": 1,
				"ast": {
					"absolutePath": "SignatureVerifier.sol",
					"exportedSymbols": {
						"ECDSA": [
							347
						],
						"SignatureVerifier": [
							440
						]
					},
					"id": 441,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 349,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 350,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 441,
							"sourceUnit": 348,
							"src": "57:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureVerifier",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 440,
							"linearizedBaseContracts": [
								440
							],
							"name": "SignatureVerifier",
							"nameLocation": "88:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "560:278:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "654:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 368,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "685:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 369,
																	"name": "expires",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "713:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 371,
																			"name": "request",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "752:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 370,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "742:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "742:18:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 374,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "792:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 373,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "782:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "782:17:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 365,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "616:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "620:12:1",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "616:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "616:201:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 364,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "589:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "589:242:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 363,
												"id": 378,
												"nodeType": "Return",
												"src": "570:261:1"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "112:271:1",
										"text": " @dev Generates a hash for signing/verifying.\n @param target: The address the signature is for.\n @param request: The original request that was sent.\n @param result: The `result` field of the response (not including the signature part)."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeSignatureHash",
									"nameLocation": "397:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "432:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "424:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "expires",
												"nameLocation": "455:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "448:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 354,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "472:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "472:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "515:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "502:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "502:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:113:1"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "551:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:9:1"
									},
									"scope": 440,
									"src": "388:450:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "1449:444:1",
										"statements": [
											{
												"assignments": [
													393,
													395,
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1473:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "1460:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 392,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1460:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "expires",
														"nameLocation": "1488:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "1481:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 394,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1481:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "sig",
														"nameLocation": "1510:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "1497:16:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 396,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1497:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"arguments": [
														{
															"id": 400,
															"name": "response",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "1541:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1564:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 401,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1564:5:1",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1571:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 403,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "1571:6:1",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1579:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 405,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1579:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 407,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1563:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_uint64_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(uint64),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_uint64_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(uint64),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 398,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1517:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1521:6:1",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1517:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1517:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bytes memory,uint64,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1459:136:1"
											},
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "1613:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "1605:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 410,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1605:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 417,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1675:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SignatureVerifier_$440",
																				"typeString": "library SignatureVerifier"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SignatureVerifier_$440",
																				"typeString": "library SignatureVerifier"
																			}
																		],
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1667:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 415,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1667:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1667:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 419,
																	"name": "expires",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "1682:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																{
																	"id": 420,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "1691:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																{
																	"id": 421,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1700:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 414,
																"name": "makeSignatureHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "1649:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (address,uint64,bytes memory,bytes memory) pure returns (bytes32)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1649:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 423,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "1721:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 412,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "1622:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$347_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1628:7:1",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "1622:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:112:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1605:129:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 427,
																"name": "expires",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1765:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 428,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1776:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1782:9:1",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1776:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1765:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e617475726556657269666965723a205369676e61747572652065787069726564",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1805:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5f9c70fb0fca7bcee302c537d829defa0b7af6be58fa206ab11f91d3c83ab0a",
																"typeString": "literal_string \"SignatureVerifier: Signature expired\""
															},
															"value": "SignatureVerifier: Signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5f9c70fb0fca7bcee302c537d829defa0b7af6be58fa206ab11f91d3c83ab0a",
																"typeString": "literal_string \"SignatureVerifier: Signature expired\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1744:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1744:109:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "1744:109:1"
											},
											{
												"expression": {
													"components": [
														{
															"id": 434,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1871:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "1879:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 436,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1870:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(address,bytes memory)"
													}
												},
												"functionReturnParameters": 391,
												"id": 437,
												"nodeType": "Return",
												"src": "1863:23:1"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "844:467:1",
										"text": " @dev Verifies a signed message returned from a callback.\n @param request: The original request that was sent.\n @param response: An ABI encoded tuple of `(bytes result, uint64 expires, bytes sig)`, where `result` is the data to return\n        to the caller, and `sig` is the (r,s,v) encoded message signature.\n @return signer: The address that signed this message.\n @return result: The `result` decoded from `response`."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1325:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "1356:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1341:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1341:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "response",
												"nameLocation": "1388:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1373:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1373:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:71:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1426:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1435:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1435:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1425:23:1"
									},
									"scope": 440,
									"src": "1316:577:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 441,
							"src": "80:1815:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1863:1"
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": null,
				"formattedMessage": "\nWarning: It looks like you are using 'ecrecover' to validate a signature of a user account.\nPolkadot comes with native account abstraction support, therefore it is highly recommended NOT\nto rely on the fact that the account has an ECDSA private key attached to it since accounts might\nimplement other signature schemes.\n\n--> ECDSA.sol\n",
				"message": "\nWarning: It looks like you are using 'ecrecover' to validate a signature of a user account.\nPolkadot comes with native account abstraction support, therefore it is highly recommended NOT\nto rely on the fact that the account has an ECDSA private key attached to it since accounts might\nimplement other signature schemes.\n",
				"severity": "warning",
				"sourceLocation": {
					"file": "0",
					"start": 6457,
					"end": 6481
				},
				"type": "Warning"
			}
		],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}